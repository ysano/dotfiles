# WSL-specific tmux settings
# Windows Subsystem for Linux environment optimizations

# WSL環境でのクリップボード連携
if-shell 'command -v clip.exe' 'bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "clip.exe"'
if-shell 'command -v clip.exe' 'bind-key -T copy-mode C-w send-keys -X copy-pipe-and-cancel "clip.exe"'

# Load common settings
source-file ~/.tmux/shared/claude-voice-common.conf
source-file ~/.tmux/shared/performance-common.conf  
source-file ~/.tmux/shared/window-status-common.conf

# WSL固有のステータスバー設定 (充実版)
# WSL版とディスク使用量、CPU使用率、ネットワーク情報を含む
set -g status-right "#[fg=colour238,bg=colour235]#[fg=colour250,bg=colour238] 💻 #(lsb_release -rs 2>/dev/null || echo 'WSL') #[fg=yellow,bold]⚡ #(cat /proc/loadavg | cut -d ' ' -f 1-3)#[default] #[fg=cyan]🧠 #(free | awk 'NR==2{printf \"%.0f%%\", $3*100/$2}')#[default] #[fg=green]💾 #(df -h / | awk 'NR==2{print $5}')#[default] #[fg=colour117,bg=colour238]#[fg=colour235,bg=colour117,bold] %m/%d(%a) %H:%M "
set -g status-right-length 120

# WSL環境でのターミナル設定
set-option -g default-terminal "tmux-256color"
set-option -sa terminal-overrides ",xterm*:Tc"
set-option -sa terminal-overrides ",WSL*:Tc"

# WSL特有のwindow-status設定 (macOS-style enhanced)
set-window-option -g window-status-current-style 'fg=colour235,bg=colour117,bold'
set-window-option -g window-status-style 'fg=colour250,bg=colour238'
set-window-option -g window-status-activity-style 'fg=colour16,bg=colour228,bold'
set-window-option -g window-status-bell-style 'fg=colour16,bg=colour202,bold'

# WSL-specific window status format
set-window-option -g window-status-format ' #I:#W#F '
set-window-option -g window-status-current-format ' #I:#W#F '

# WSL環境でのセッション永続化
set -g @continuum-save-interval '15'  # 15分間隔で自動保存

# WSL-specific environment variables
set-environment -g WSL_INTEGRATION 'enabled'
set-environment -g WINDOWS_HOST_PATH '/mnt/c'

# Claude Voice WSL integration settings (音声通知システム)
set-environment -g CLAUDE_VOICE_AUTO_SUMMARY "true"         # Master switch for auto-summary
set-environment -g CLAUDE_VOICE_ON_COMPLETE "true"         # Auto-summary on completion (✅)
set-environment -g CLAUDE_VOICE_ON_WAITING "true"          # Auto-summary on input waiting (⌛)
set-environment -g CLAUDE_VOICE_ON_BUSY "false"            # Auto-summary on busy start (⚡) - usually not needed

# WSL audio notification settings
set-environment -g CLAUDE_NOTIFICATION_SOUND "true"

# WSL-specific key bindings for Claude Voice
# Test Claude Voice WSL integration
bind-key C-t run-shell 'echo "Testing WSL Claude Voice integration..." && ~/.tmux/scripts/claude-notify.sh #{window_index} "" "✅"'

# Toggle Claude Voice auto-summary (master switch)
bind-key C-a run-shell 'if [ "$CLAUDE_VOICE_AUTO_SUMMARY" = "true" ]; then tmux set-environment -g CLAUDE_VOICE_AUTO_SUMMARY "false" && tmux display-message "Claude Voice auto-summary disabled"; else tmux set-environment -g CLAUDE_VOICE_AUTO_SUMMARY "true" && tmux display-message "Claude Voice auto-summary enabled"; fi'

# Individual toggles for each state (same as macOS)
bind-key C-1 run-shell 'if [ "$CLAUDE_VOICE_ON_COMPLETE" = "true" ]; then tmux set-environment -g CLAUDE_VOICE_ON_COMPLETE "false" && tmux display-message "Claude Voice on completion: OFF"; else tmux set-environment -g CLAUDE_VOICE_ON_COMPLETE "true" && tmux display-message "Claude Voice on completion: ON"; fi'
bind-key C-2 run-shell 'if [ "$CLAUDE_VOICE_ON_WAITING" = "true" ]; then tmux set-environment -g CLAUDE_VOICE_ON_WAITING "false" && tmux display-message "Claude Voice on waiting: OFF"; else tmux set-environment -g CLAUDE_VOICE_ON_WAITING "true" && tmux display-message "Claude Voice on waiting: ON"; fi'
bind-key C-3 run-shell 'if [ "$CLAUDE_VOICE_ON_BUSY" = "true" ]; then tmux set-environment -g CLAUDE_VOICE_ON_BUSY "false" && tmux display-message "Claude Voice on busy: OFF"; else tmux set-environment -g CLAUDE_VOICE_ON_BUSY "true" && tmux display-message "Claude Voice on busy: ON"; fi'
# WSL-specific utility keybindings
# Open Windows Explorer at current directory
bind-key C-e run-shell 'explorer.exe .'

# Copy current path to Windows clipboard
bind-key C-p run-shell 'pwd | tr -d "\\n" | clip.exe && tmux display-message "Path copied to Windows clipboard"'

# WSL Performance optimizations
# Better scrollback buffer size for development
set -g history-limit 50000

# WSL-optimized refresh rate
set -g display-time 3000
set -g display-panes-time 3000

# Optimized status update frequency for WSL
set -g status-interval 5

# WSL clipboard integration improvements
# Enhanced clipboard for mouse selection
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "clip.exe"
bind-key -T copy-mode MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "clip.exe"

# Better pane management for development
# Quick pane splitting with better paths
bind-key | split-window -h -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}"
# WSL-specific development helpers
# Quick access to Windows user directory
bind-key C-w run-shell 'cd /mnt/c/Users/$USER 2>/dev/null || cd /mnt/c/Users/$(whoami) 2>/dev/null || tmux display-message "Windows user dir not found"'

# Git status in current directory
bind-key C-g run-shell 'cd #{pane_current_path} && git status --porcelain | head -10 | tmux display-message "$(cat)"'