# Claude Voice Integration for tmux
# クロスプラットフォーム対応音声通知システムの統合設定

# ステータス更新間隔の調整
# Status interval managed by OS-specific configs to avoid conflicts
# set -g status-interval 10

# Claude Voice用キーバインド設定
# Prefix + C-v のプレフィックスでClaude Voice機能にアクセス

# 基本的な要約機能（Prefix + C-v + 追加キー）
bind-key C-v switch-client -T claude-voice-prefix

# Claude Voice プレフィックステーブル
bind-key -T claude-voice-prefix b run-shell "~/.tmux/claude/bin/claude-voice brief 30"
bind-key -T claude-voice-prefix d run-shell "~/.tmux/claude/bin/claude-voice detailed 50"
bind-key -T claude-voice-prefix t run-shell "~/.tmux/claude/bin/claude-voice technical 40"

# 短縮キーバインド（直接実行）
bind-key C-v run-shell "~/.tmux/claude/bin/claude-voice brief 30"

# 異なる行数での要約
bind-key -T claude-voice-prefix 1 run-shell "~/.tmux/claude/bin/claude-voice brief 20"
bind-key -T claude-voice-prefix 2 run-shell "~/.tmux/claude/bin/claude-voice brief 50"
bind-key -T claude-voice-prefix 3 run-shell "~/.tmux/claude/bin/claude-voice brief 100"

# 特定のモデルでの要約
bind-key -T claude-voice-prefix p run-shell "~/.tmux/claude/bin/claude-voice brief 30 auto phi4-mini:latest"
bind-key -T claude-voice-prefix o run-shell "~/.tmux/claude/bin/claude-voice brief 30 auto orca-mini:latest"

# システム管理機能
bind-key -T claude-voice-prefix h run-shell "~/.tmux/claude/bin/claude-voice --help | head -20"
bind-key -T claude-voice-prefix s run-shell "~/.tmux/claude/bin/claude-voice --stats"
bind-key -T claude-voice-prefix T run-shell "~/.tmux/claude/bin/claude-voice --test"

# デバッグモード
bind-key -T claude-voice-prefix D run-shell "DEBUG_MODE=true ~/.tmux/claude/bin/claude-voice debug brief 20"

# 複数ペインでの要約（新機能）
bind-key -T claude-voice-prefix a run-shell "~/.tmux/claude/scripts/multi-pane-summary.sh"

# 設定管理
bind-key -T claude-voice-prefix c run-shell "~/.tmux/claude/bin/claude-voice config"

# 自動通知設定（オプション - 必要に応じてコメントアウト）
# ウィンドウ切り替え時の自動要約
# set-hook -g window-pane-changed 'run-shell "~/.tmux/claude/scripts/auto-notify.sh"'

# セッション開始時の歓迎メッセージ
set-hook -g session-created 'run-shell "~/.tmux/claude/scripts/welcome-message.sh"'

# ペイン作成時の環境通知
# set-hook -g after-new-window 'run-shell "~/.tmux/claude/scripts/new-window-notify.sh"'

# 通知の無効化/有効化トグル
bind-key -T claude-voice-prefix n run-shell '~/.tmux/claude/scripts/toggle-notifications.sh'

# ステータスバーの統合は既存設定を尊重し、コメントアウト
# ユーザーの既存tmux設定を保持するため、ステータスバー変更は無効化
# set-option -g status-right "#{?client_prefix,#[reverse]<Prefix>#[noreverse] ,}#[fg=green]CV#[default] %Y-%m-%d %H:%M"

# ヘルプメッセージの表示
bind-key -T claude-voice-prefix '?' display-message "Claude Voice Keys: C-v(brief), C-v+b(brief), C-v+d(detailed), C-v+t(tech), C-v+s(stats), C-v+h(help)"

# キーバインドのリスト表示
bind-key -T claude-voice-prefix k run-shell "tmux list-keys -T claude-voice-prefix | tmux display-message -p"

# ログ表示機能
bind-key -T claude-voice-prefix l run-shell "tail -20 ~/.tmux/claude/logs/claude-voice.log | tmux display-message -p"

# Claude Voice設定の動的リロード
bind-key -T claude-voice-prefix r run-shell "tmux source-file ~/.tmux/claude/integrations/claude-voice.conf && tmux display-message 'Claude Voice config reloaded'"

# 緊急停止機能（全ての音声プロセスを停止）
bind-key -T claude-voice-prefix x run-shell "~/.tmux/claude/scripts/emergency-stop.sh"

# ワークスペース特有の設定
# プロジェクトタイプに応じた自動要約設定
if-shell 'test -f package.json' \
  'bind-key -T claude-voice-prefix j run-shell "~/.tmux/claude/bin/claude-voice technical 40 auto qwen2.5-coder:3b"'

if-shell 'test -f requirements.txt' \
  'bind-key -T claude-voice-prefix j run-shell "~/.tmux/claude/bin/claude-voice technical 40 auto phi4-mini:latest"'

if-shell 'test -f Cargo.toml' \
  'bind-key -T claude-voice-prefix j run-shell "~/.tmux/claude/bin/claude-voice technical 40 auto qwen2.5-coder:3b"'

# 高度な機能：マクロキーバインド
# 連続要約（brief → detailed → technical）
bind-key -T claude-voice-prefix m run-shell "
~/.tmux/claude/bin/claude-voice brief 20 && sleep 1 && \
~/.tmux/claude/bin/claude-voice detailed 30 && sleep 1 && \
~/.tmux/claude/bin/claude-voice technical 25
"

# OS固有のキーバインド
if-shell 'test "$(uname)" = "Darwin"' \
  'bind-key -T claude-voice-prefix i run-shell "~/.tmux/claude/scripts/integration-macos.sh"'

if-shell 'test "$(uname)" = "Linux"' \
  'bind-key -T claude-voice-prefix i run-shell "~/.tmux/claude/scripts/integration-linux.sh"'

if-shell 'grep -qi microsoft /proc/version 2>/dev/null' \
  'bind-key -T claude-voice-prefix i run-shell "~/.tmux/claude/scripts/integration-windows.sh"'

# セッション固有の設定
# セッション名に基づく自動設定
if-shell 'test "#{session_name}" = "dev"' \
  'set-hook -g window-pane-changed "run-shell ~/.tmux/claude/bin/claude-voice brief 15"'

if-shell 'test "#{session_name}" = "monitor"' \
  'set-hook -g window-pane-changed "run-shell ~/.tmux/claude/bin/claude-voice technical 25"'

# パフォーマンス最適化
# レート制限付き自動通知
set-option -g @claude-voice-last-notify 0
set-option -g @claude-voice-rate-limit 5  # 5秒間隔

# 通知頻度の制御
set-hook -g window-pane-changed '
if-shell "test $(($(date +%s) - #{@claude-voice-last-notify})) -gt #{@claude-voice-rate-limit}" \
  "run-shell \"~/.tmux/claude/scripts/rate-limited-notify.sh\" ; set-option -g @claude-voice-last-notify $(date +%s)"
'

# エラーハンドリング
# Claude Voice実行失敗時のフォールバック
set-option -g @claude-voice-fallback "display-message 'Claude Voice execution failed'"

# デバッグ用の詳細ログ出力（開発時のみ有効化）
# set-option -g @claude-voice-debug true