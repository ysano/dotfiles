# Claude Voice 共通統合設定
# macOS, WSL, Linux環境で共通使用される設定

# Claude Voice integration environment variables
set-environment -g CLAUDE_VOICE_AUTO_SUMMARY "true"         # Master switch for auto-summary
set-environment -g CLAUDE_VOICE_ON_COMPLETE "true"         # Auto-summary on completion (✅)
set-environment -g CLAUDE_VOICE_ON_WAITING "true"          # Auto-summary on input waiting (⌛)
set-environment -g CLAUDE_VOICE_ON_BUSY "false"            # Auto-summary on busy start (⚡) - usually not needed

# Audio notification settings (共通)
set-environment -g CLAUDE_NOTIFICATION_SOUND "true"

# ステータス別音声設定（共通・Claude Code公式3状態）
# Status-specific voice configurations - format: "rate:X|volume:Y|pitch:Z|speed:W"
set-environment -g CLAUDE_VOICE_STATUS_BUSY "rate:2|volume:90|pitch:medium|speed:fast"        # ⚡ 処理実行中
set-environment -g CLAUDE_VOICE_STATUS_WAITING "rate:0|volume:75|pitch:low|speed:normal"      # ⌛ 確認待ち・入力待ち  
set-environment -g CLAUDE_VOICE_STATUS_COMPLETE "rate:1|volume:85|pitch:high|speed:normal"    # ✅ アイドル・完了

# パンニング機能設定（共通）
set-environment -g CLAUDE_VOICE_PANNING_ENABLED "true"      # パンニング機能の有効/無効
set-environment -g CLAUDE_VOICE_PANNING_RANGE "80"          # パンニング範囲（-80～80）
set-environment -g CLAUDE_VOICE_MAX_WINDOWS "5"             # 最大ウィンドウ数（パンニング計算用）

# 通知音バリエーション設定（共通）
set-environment -g CLAUDE_VOICE_NOTIFICATION_MODE "both"    # both, sound_only, speech_only
set-environment -g CLAUDE_VOICE_SOUND_EFFECTS "true"        # 効果音の有効/無効
set-environment -g CLAUDE_VOICE_BEEP_VOLUME "80"            # 効果音の音量（0-100）

# Claude Voice 共通キーバインド (単純なキーマップ)
# 衝突回避のため、使用頻度の低いキーを使用
#
# キーマップ一覧:
#   Prefix + F1      - Claude Voice統合テスト
#   Prefix + F2      - Claude Voice自動要約 ON/OFF
#   Prefix + F3      - パンニング機能 ON/OFF
#   Prefix + F4      - ⚡ 忙しい状態の効果音テスト
#   Prefix + F5      - ⌛ 待機状態の効果音テスト  
#   Prefix + F6      - ✅ 完了状態の効果音テスト
#   Prefix + F7      - ⚡ 忙しい状態の音声テスト
#   Prefix + F8      - ⌛ 待機状態の音声テスト
#   Prefix + F9      - ✅ 完了状態の音声テスト
#   Prefix + F10     - ⚡ 忙しい状態の複合通知
#   Prefix + F11     - ⌛ 待機状態の複合通知
#   Prefix + F12     - ✅ 完了状態の複合通知

# Claude Voice統合テスト
bind-key F1 run-shell 'echo "Testing Claude Voice integration..." && ~/.tmux/scripts/claude-notify.sh #{window_index} "" "✅"'

# Claude Voice設定トグル
bind-key F2 run-shell 'if [ "$CLAUDE_VOICE_AUTO_SUMMARY" = "true" ]; then tmux set-environment -g CLAUDE_VOICE_AUTO_SUMMARY "false" && tmux display-message "Claude Voice auto-summary: OFF"; else tmux set-environment -g CLAUDE_VOICE_AUTO_SUMMARY "true" && tmux display-message "Claude Voice auto-summary: ON"; fi'

# パンニング機能切り替え
bind-key F3 run-shell 'if [ "$CLAUDE_VOICE_PANNING_ENABLED" = "true" ]; then tmux set-environment -g CLAUDE_VOICE_PANNING_ENABLED "false" && tmux display-message "Voice panning: DISABLED"; else tmux set-environment -g CLAUDE_VOICE_PANNING_ENABLED "true" && tmux display-message "Voice panning: ENABLED"; fi'

# ステータス別効果音テスト (v2.0 Modular Engine)
bind-key F4 run-shell 'if command -v ~/.tmux/claude/core/wsl_voice_engine_v2.sh >/dev/null 2>&1; then ~/.tmux/claude/core/wsl_voice_engine_v2.sh sound "⚡" && tmux display-message "v2.0 Sound: ⚡ BUSY"; else tmux display-message "WSL voice engine v2.0 not available"; fi'
bind-key F5 run-shell 'if command -v ~/.tmux/claude/core/wsl_voice_engine_v2.sh >/dev/null 2>&1; then ~/.tmux/claude/core/wsl_voice_engine_v2.sh sound "⌛" && tmux display-message "v2.0 Sound: ⌛ WAITING"; else tmux display-message "WSL voice engine v2.0 not available"; fi'
bind-key F6 run-shell 'if command -v ~/.tmux/claude/core/wsl_voice_engine_v2.sh >/dev/null 2>&1; then ~/.tmux/claude/core/wsl_voice_engine_v2.sh sound "✅" && tmux display-message "v2.0 Sound: ✅ COMPLETE"; else tmux display-message "WSL voice engine v2.0 not available"; fi'

# ステータス別音声合成テスト (v2.0 Modular Engine)
bind-key F7 run-shell 'if command -v ~/.tmux/claude/core/wsl_voice_engine_v2.sh >/dev/null 2>&1; then ~/.tmux/claude/core/wsl_voice_engine_v2.sh speak "処理を実行中です" && tmux display-message "v2.0 Speech: ⚡ BUSY"; else tmux display-message "WSL voice engine v2.0 not available"; fi'
bind-key F8 run-shell 'if command -v ~/.tmux/claude/core/wsl_voice_engine_v2.sh >/dev/null 2>&1; then ~/.tmux/claude/core/wsl_voice_engine_v2.sh speak "入力をお待ちしています" && tmux display-message "v2.0 Speech: ⌛ WAITING"; else tmux display-message "WSL voice engine v2.0 not available"; fi'
bind-key F9 run-shell 'if command -v ~/.tmux/claude/core/wsl_voice_engine_v2.sh >/dev/null 2>&1; then ~/.tmux/claude/core/wsl_voice_engine_v2.sh speak "処理が完了しました" && tmux display-message "v2.0 Speech: ✅ COMPLETE"; else tmux display-message "WSL voice engine v2.0 not available"; fi'

# 複合通知テスト (v2.0 Modular Engine)
bind-key F10 run-shell 'if command -v ~/.tmux/claude/core/wsl_voice_engine_v2.sh >/dev/null 2>&1; then ~/.tmux/claude/core/wsl_voice_engine_v2.sh notify "処理を開始します" "⚡" 1 "both" && tmux display-message "v2.0 Composite: ⚡ BUSY"; else tmux display-message "WSL voice engine v2.0 not available"; fi'
bind-key F11 run-shell 'if command -v ~/.tmux/claude/core/wsl_voice_engine_v2.sh >/dev/null 2>&1; then ~/.tmux/claude/core/wsl_voice_engine_v2.sh notify "入力をお待ちしています" "⌛" 1 "both" && tmux display-message "v2.0 Composite: ⌛ WAITING"; else tmux display-message "WSL voice engine v2.0 not available"; fi'
bind-key F12 run-shell 'if command -v ~/.tmux/claude/core/wsl_voice_engine_v2.sh >/dev/null 2>&1; then ~/.tmux/claude/core/wsl_voice_engine_v2.sh notify "処理が完了しました" "✅" 1 "both" && tmux display-message "v2.0 Composite: ✅ COMPLETE"; else tmux display-message "WSL voice engine v2.0 not available"; fi'